{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { Avatar } from \"react-native-elements\";\nimport { Ionicons, SimpleLineIcons } from \"@expo/vector-icons\";\nimport { collection, onSnapshot, where, query } from \"firebase/firestore\";\nimport ChatListItem from \"../components/ChatListItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chats = _useState2[0],\n    setChats = _useState2[1];\n  var signOut = function signOut() {\n    auth.signOut().then(function () {\n      navigation.replace(\"Login\");\n    });\n  };\n  useEffect(function () {\n    var q = query(collection(db, \"chats\"), where(\"chatName\", '!=', \"\"));\n    return onSnapshot(q, function (querySnapshots) {\n      var chats = [];\n      querySnapshots.forEach(function (doc) {\n        chats.push({\n          id: doc.id,\n          data: doc.data()\n        });\n      });\n      console.log(chats);\n      setChats(chats);\n    });\n  }, []);\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"PolyChat\",\n      headerStyle: {\n        backgroundColor: \"#fff\"\n      },\n      headerTitleStyle: {\n        color: \"black\"\n      },\n      headerLeft: function headerLeft() {\n        var _auth$currentUser;\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            onPress: function onPress() {\n              return alert(\"Navigate to UserProfileScreen\");\n            },\n            children: _jsx(Avatar, {\n              rounded: true,\n              source: {\n                uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n              }\n            })\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: 120,\n            marginRight: 20\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"AddChat\");\n            },\n            activeOpacity: 0.5,\n            children: _jsx(SimpleLineIcons, {\n              name: \"pencil\",\n              size: 24,\n              color: \"black\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return alert(\"Navigate to SearchScreen\");\n            },\n            activeOpacity: 0.5,\n            children: _jsx(Ionicons, {\n              name: \"search\",\n              size: 24,\n              color: \"black\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: signOut,\n            activeOpacity: 0.5,\n            children: _jsx(Ionicons, {\n              name: \"exit\",\n              size: 24,\n              color: \"black\"\n            })\n          })]\n        });\n      }\n    });\n  }, [navigation]);\n\n  var enterChat = function enterChat(id, chatName) {\n    navigation.navigate(\"Chat\", {\n      id: id,\n      chatName: chatName\n    });\n  };\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      style: styles.container,\n      children: chats.map(function (_ref2) {\n        var id = _ref2.id,\n          chatName = _ref2.data.chatName;\n        return _jsx(ChatListItem, {\n          id: id,\n          chatName: chatName,\n          enterChat: enterChat\n        }, id);\n      })\n    })\n  });\n};\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","auth","db","Avatar","Ionicons","SimpleLineIcons","collection","onSnapshot","where","query","ChatListItem","HomeScreen","navigation","chats","setChats","signOut","then","replace","q","querySnapshots","forEach","doc","push","id","data","console","log","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerLeft","marginLeft","alert","uri","currentUser","photoURL","headerRight","flexDirection","justifyContent","width","marginRight","navigate","enterChat","chatName","styles","container","map","StyleSheet","create","height"],"sources":["C:/Users/egor6/WebstormProjects/api_mini_lab_4/screens/HomeScreen.js"],"sourcesContent":["import {ScrollView, StyleSheet, TouchableOpacity, View} from \"react-native\";\r\nimport React, {useEffect, useLayoutEffect, useState} from \"react\";\r\nimport {auth, db} from \"../firebase\";\r\nimport {Avatar} from \"react-native-elements\";\r\nimport {Ionicons, SimpleLineIcons} from \"@expo/vector-icons\"\r\nimport { collection, onSnapshot, where, query } from \"firebase/firestore\";\r\nimport ChatListItem from \"../components/ChatListItem\";\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n    const [chats, setChats] = useState([]);\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            navigation.replace(\"Login\");\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const q = query(collection(db, \"chats\"), where(\"chatName\", '!=', \"\"));\r\n        return onSnapshot(q, (querySnapshots) => {\r\n            const chats = [];\r\n            querySnapshots.forEach((doc) => {\r\n                chats.push({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                });\r\n            });\r\n            console.log(chats);\r\n            setChats(chats);\r\n        });\r\n    }, [])\r\n\r\n    // Перед отрисовкой UI настраиваем содержимое верхней плашки\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"PolyChat\",\r\n            headerStyle : { backgroundColor: \"#fff\" },\r\n            headerTitleStyle: {color: \"black\"},\r\n            // Задаем разметку частей слева и справа от заголовка\r\n            headerLeft: () => (\r\n                <View style={{ marginLeft: 20 }}>\r\n                    <TouchableOpacity activeOpacity={0.5} onPress={()=>alert(\"Navigate to UserProfileScreen\")}>\r\n                        <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }}/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <View style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    width: 120,\r\n                    marginRight: 20,\r\n                }}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"AddChat\")} activeOpacity={0.5}>\r\n                        <SimpleLineIcons name='pencil' size={24} color=\"black\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={()=>alert(\"Navigate to SearchScreen\")} activeOpacity={0.5}>\r\n                        <Ionicons name='search' size={24} color=\"black\"/>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={signOut} activeOpacity={0.5}>\r\n                        <Ionicons name='exit' size={24} color=\"black\"/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n        })\r\n    }, [navigation])\r\n\r\n    // Переходим на экран чата; при этом передаем id и name выбранного чата,\r\n    // чтобы на экране чата отобразить нужное содержимое\r\n    const enterChat = (id, chatName) => {\r\n        navigation.navigate(\"Chat\", {id, chatName,})\r\n    }\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <ScrollView style={styles.container}>\r\n                {chats.map( ({id, data: { chatName }}) => (\r\n                    <ChatListItem key={id} id={id} chatName={chatName} enterChat={enterChat}/>\r\n                ))}\r\n            </ScrollView>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: \"100%\"\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}