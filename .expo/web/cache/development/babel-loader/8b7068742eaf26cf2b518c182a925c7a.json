{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Input, Button, Text } from \"react-native-elements\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { defaultPicURL } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imageUrl = _useState8[0],\n    setImageUrl = _useState8[1];\n  var register = function register() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      updateProfile(userCredentials.user, {\n        displayName: name,\n        photoURL: imageUrl || defaultPicURL\n      }).catch(function (error) {\n        return alert(error.message);\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Text, {\n      h3: true,\n      style: {\n        marginBottom: 50\n      },\n      children: \" Create an account \"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Input, {\n        placeholder: \"Full Name\",\n        autoFocus: true,\n        type: \"text\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Email\",\n        type: \"email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        type: \"password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Image URL (optional)\",\n        type: \"text\",\n        value: imageUrl,\n        onChangeText: function onChangeText(text) {\n          return setImageUrl(text);\n        },\n        onSubmitEditing: register\n      })]\n    }), _jsx(Button, {\n      containerStyle: styles.button,\n      raised: true,\n      onPress: register,\n      title: \"Register\"\n    })]\n  });\n};\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  },\n  inputContainer: {\n    width: 300\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","Input","Button","Text","createUserWithEmailAndPassword","updateProfile","auth","defaultPicURL","RegisterScreen","name","setName","email","setEmail","password","setPassword","imageUrl","setImageUrl","register","then","userCredentials","user","displayName","photoURL","catch","error","alert","message","styles","container","marginBottom","inputContainer","text","button","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginTop"],"sources":["C:/Users/egor6/WebstormProjects/api_mini_lab_4/screens/RegisterScreen.js"],"sourcesContent":["import { StyleSheet, View} from \"react-native\";\r\nimport React, {useState} from \"react\";\r\nimport {StatusBar} from \"expo-status-bar\";\r\nimport {Input, Button, Text } from \"react-native-elements\";\r\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport { auth } from \"../firebase\"\r\nimport {defaultPicURL} from \"../utils\";\r\n\r\nconst RegisterScreen = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n    const register = () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredentials) => {\r\n                updateProfile(userCredentials.user, {\r\n                    displayName: name,\r\n                    photoURL: imageUrl || defaultPicURL\r\n                }).catch(error => alert(error.message));\r\n            }).catch(error => alert(error.message));\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar style=\"light\"/>\r\n            <Text h3 style={{ marginBottom: 50 }}> Create an account </Text>\r\n            <View style={styles.inputContainer}>\r\n                <Input placeholder=\"Full Name\" autoFocus type=\"text\" value={name}\r\n                       onChangeText={(text)=>setName(text)}/>\r\n                <Input placeholder=\"Email\" type=\"email\" value={email}\r\n                       onChangeText={(text)=>setEmail(text)}/>\r\n                <Input placeholder=\"Password\" secureTextEntry type=\"password\" value={password}\r\n                       onChangeText={(text)=>setPassword(text)}/>\r\n                <Input placeholder=\"Image URL (optional)\" type=\"text\" value={imageUrl}\r\n                       onChangeText={(text)=>setImageUrl(text)}\r\n                       onSubmitEditing={register}/>\r\n            </View>\r\n            <Button containerStyle={styles.button}\r\n                    raised onPress={register} title='Register'/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 10,\r\n        backgroundColor: 'white',\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10,\r\n    },\r\n    inputContainer: {\r\n        width: 300\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}