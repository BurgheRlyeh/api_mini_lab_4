{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { Input } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { auth, db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Add a new Chat\",\n      headerBackTitle: \"Chats\"\n    });\n  }, [navigation]);\n  var createChat = function createChat() {\n    var docRef = addDoc(collection(db, \"chats\"), {\n      chatName: input\n    }).then(function () {\n      navigation.goBack();\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Input, {\n      placeholder: \"Enter a chat name\",\n      value: input,\n      onChangeText: function onChangeText(text) {\n        return setInput(text);\n      },\n      leftIcon: _jsx(Icon, {\n        name: \"wechat\",\n        type: \"antdesign\",\n        size: 24,\n        color: \"black\"\n      })\n    }), _jsx(Button, {\n      disabled: !input,\n      onPress: createChat,\n      title: \"Create new chat\"\n    })]\n  });\n};\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 30,\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useLayoutEffect","useState","addDoc","collection","Input","Icon","auth","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerBackTitle","createChat","docRef","chatName","then","goBack","catch","error","alert","message","styles","container","text","StyleSheet","create","backgroundColor","padding","height"],"sources":["C:/Users/egor6/WebstormProjects/api_mini_lab_4/screens/AddChatScreen.js"],"sourcesContent":["import {Button, StyleSheet, Text, View} from \"react-native\";\r\nimport React, {useLayoutEffect, useState} from \"react\";\r\nimport {addDoc, collection} from \"firebase/firestore\";\r\nimport { Input } from \"react-native-elements\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\"\r\nimport { auth, db } from \"../firebase\";\r\n\r\nconst AddChatScreen = ({ navigation }) => {\r\n    const [input, setInput] = useState('');\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Add a new Chat\",\r\n            // Только iOS\r\n            headerBackTitle: \"Chats\",\r\n\r\n        })\r\n    }, [navigation]);\r\n\r\n    const createChat = () => {\r\n        const docRef = addDoc(collection(db, \"chats\"),{\r\n            chatName: input\r\n        }).then(() => {\r\n            navigation.goBack();\r\n        }).catch((error) => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input placeholder='Enter a chat name' value={input}\r\n                   onChangeText={(text) => setInput(text)}\r\n                   leftIcon={\r\n                       <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\"/>\r\n                   }\r\n            />\r\n            <Button disabled={!input} onPress={createChat} title=\"Create new chat\" />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"white\",\r\n        padding: 30,\r\n        height: \"100%\",\r\n    }\r\n})"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAGC,eAAe,EAAEC,QAAQ,QAAO,OAAO;AACtD,SAAQC,MAAM,EAAEC,UAAU,QAAO,oBAAoB;AACrD,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,OAAOC,IAAI;AACX,SAASC,IAAI,EAAEC,EAAE;AAAsB;AAAA;AAEvC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC/B,gBAA0BR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BS,KAAK;IAAEC,QAAQ;EAEtBX,eAAe,CAAC,YAAM;IAClBS,UAAU,CAACG,UAAU,CAAC;MAClBC,KAAK,EAAE,gBAAgB;MAEvBC,eAAe,EAAE;IAErB,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,IAAMM,UAAU,GAAG,SAAbA,UAAU,GAAS;IACrB,IAAMC,MAAM,GAAGd,MAAM,CAACC,UAAU,CAACI,EAAE,EAAE,OAAO,CAAC,EAAC;MAC1CU,QAAQ,EAAEP;IACd,CAAC,CAAC,CAACQ,IAAI,CAAC,YAAM;MACVT,UAAU,CAACU,MAAM,EAAE;IACvB,CAAC,CAAC,CAACC,KAAK,CAAC,UAACC,KAAK;MAAA,OAAKC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IAAA,EAAC;EAC7C,CAAC;EAED,OACI,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC1B,KAAC,KAAK;MAAC,WAAW,EAAC,mBAAmB;MAAC,KAAK,EAAEf,KAAM;MAC7C,YAAY,EAAE,sBAACgB,IAAI;QAAA,OAAKf,QAAQ,CAACe,IAAI,CAAC;MAAA,CAAC;MACvC,QAAQ,EACJ,KAAC,IAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,WAAW;QAAC,IAAI,EAAE,EAAG;QAAC,KAAK,EAAC;MAAO;IAC/D,EACN,EACF,KAAC,MAAM;MAAC,QAAQ,EAAE,CAAChB,KAAM;MAAC,OAAO,EAAEK,UAAW;MAAC,KAAK,EAAC;IAAiB,EAAG;EAAA,EACtE;AAEf,CAAC;AAED,eAAeP,aAAa;AAE5B,IAAMgB,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC7BH,SAAS,EAAE;IACPI,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}